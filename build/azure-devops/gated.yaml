jobs:
- job: Linux
  displayName: Linux

  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - bash: chmod +x ./build/cake/build.sh
    displayName: Grant permissions
  - bash: ./build/cake/build.sh -s build/cake/build.cake --target=Build
    displayName: Run Build Solution
  - bash: ./build/cake/build.sh -s build/cake/build.cake --target=Run-Unit-Tests
    displayName: Run Unit Tests

- job: macOS
  displayName: macOS
  pool:
    vmImage: 'xcode9-macos10.13'
  steps:
  - bash: chmod +x ./build/cake/build.sh
    displayName: Grant permissions
  - bash: ./build/cake/build.sh -s build/cake/build.cake --target=Build
    displayName: Run Build Solution
  - bash: ./build/cake/build.sh -s build/cake/build.cake --target=Run-Unit-Tests
    displayName: Run Unit Tests

- job: Windows
  displayName: Windows
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - powershell: ./build/cake/build.ps1 -Script build/cake/build.cake -Target Build
    displayName: Run Build Solution
  - powershell: ./build/cake/build.ps1 -Script build/cake/build.cake -Target Run-Unit-Tests
    displayName: Run Unit Tests

- job: 'CodeInspection'
  displayName: 'Code inspection'
  dependsOn:
  - Linux
  - macOS
  - Windows
  condition: succeeded()

  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - powershell: ./build/cake/build.ps1 -Script build/cake/build.cake -Target Build
    displayName: Run Build Solution
  - powershell: ./build/cake/build.ps1 -Script build/cake/build.cake -Target Run-Unit-Tests
    displayName: Run Unit Tests
  - task: PublishTestResults@2
    displayName: Publish Unit Tests Results
    inputs:
       testResultsFormat: VSTest
       testResultsFiles: '**/*.trx'
       mergeTestResults: true
       testRunTitle: Linux
  - task: PublishCodeCoverageResults@1
    displayName: Publish Code Coverage Results To Azure DevOps
    inputs:
      codecoverageTool: cobertura
      summaryFileLocation: $(System.DefaultWorkingDirectory)/**/artifacts/coverage.cobertura.xml
      reportDirectory: $(System.DefaultWorkingDirectory)/**/artifacts
  - powershell: ./build/cake/build.ps1 -Script build/cake/build.cake -Target Publish-Coverage -ScriptArgs '-Coveralls="$(Coveralls.Token)"'
    displayName: Publish Code Coverage Results To Coveralls